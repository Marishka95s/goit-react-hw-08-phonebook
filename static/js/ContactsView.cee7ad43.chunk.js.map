{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Contacts/ContactForm/ContactForm.module.css","Components/Contacts/Filter/Filter.module.css","Components/Contacts/ContactList/ContactList.module.css","views/ContactsView.module.css","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","Components/Contacts/ContactForm/ContactForm.js","Components/Contacts/Filter/Filter.js","Components/Contacts/ContactList/ContactList.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","fetchContactRequest","actions","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateContactRequest","updateContactSuccess","updateContactError","fetchContact","dispatch","axios","get","then","data","catch","error","addContact","contacts","name","number","some","contact","alert","post","deleteContact","contactId","delete","updateContact","update","patch","getContacts","state","items","getFilter","filter","getTotalContacts","getError","getLoadingStatus","loading","getFiltredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useSelector","ContactsSelectors","useState","setName","setNumber","handleChange","event","target","className","styles","form","method","onSubmit","preventDefault","ContactsOperations","label","input","type","pattern","title","required","onChange","btn","Filter","placeholder","ContactsActions","changeFilter","currentTarget","ContactList","useEffect","list","map","id","item","onClick","ContactsView","totalContacts"],"mappings":"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","file":"static/js/ContactsView.cee7ad43.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ateH\",\"label\":\"ContactForm_label__iYR4Q\",\"input\":\"ContactForm_input__2Zkig\",\"btn\":\"ContactForm_btn__1JpRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__LlR5H\",\"label\":\"Filter_label__1MI-Y\",\"input\":\"Filter_input__yY-KY\",\"btn\":\"Filter_btn__3IM-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1fvOe\",\"item\":\"ContactList_item__1mFBC\",\"name\":\"ContactList_name__NMSGQ\",\"btn\":\"ContactList_btn__1cM8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsView_contacts__CzxqU\"};","import axios from 'axios';\r\nimport * as actions from './contacts-actions';\r\n\r\nconst { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, updateContactRequest, updateContactSuccess, updateContactError } = actions;\r\n\r\nexport const fetchContact = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    axios.get('/contacts').then(({ data }) => dispatch(fetchContactSuccess(data))).catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = (contacts, name, number) => dispatch => {\r\n    // const isInContacts = contacts.some(contact => contact.name === name);\r\n    //     if (isInContacts) { \r\n    //         let replaceAgreement = window.confirm(`${name} is already in contacts. Replace ${name} number?`);\r\n\r\n    //         if (!replaceAgreement) {\r\n    //             const update = { number };\r\n    //             dispatch(updateContactRequest());\r\n\r\n    //             axios\r\n    //             .patch(`/contacts/${name}`, update)\r\n    //             .then(({ data }) => dispatch(updateContactSuccess(data)))\r\n    //             .catch(error => dispatch(updateContactError(error)));\r\n    //         }\r\n    const isInContacts = contacts.some(contact => contact.name === name);\r\n        if (isInContacts) { \r\n            alert(`${name} is already in contacts`);\r\n            return;\r\n        }    \r\n    const contact = {\r\n        name, \r\n        number\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios.post('/contacts', contact).then(({ data }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error)));\r\n// }\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${contactId}`).then(() => dispatch(deleteContactSuccess(contactId))).catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport const updateContact = (contactId, number) => dispatch => {\r\n    const update = { number };\r\n    dispatch(updateContactRequest());\r\n\r\n    axios.patch(`/contacts/${contactId}`, update).then(({ data }) => dispatch(updateContactSuccess(data))).catch(error => dispatch(updateContactError(error)));\r\n};\r\n\r\n// const operations = { fetchContact, addContact, deleteContact, updateContact };\r\n// export default operations;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getTotalContacts = state => state.contacts.items.length;\r\nexport const getError = state => state.contacts.error;\r\nexport const getLoadingStatus = state => state.contacts.loading;\r\n\r\nexport const getFiltredContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n      const normalizedFilter = filter.toLowerCase();  \r\n      return contacts.filter(contact => contact.name.includes(normalizedFilter),\r\n      );\r\n    },\r\n  );\r\n\r\n// export const getFiltredContacts = state => {\r\n//     const contacts = getContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n   \r\n//     return contacts.filter(contact => contact.name.includes(normalizedFilter))};\r\n\r\n","import React, { useState } from 'react';\r\n// import useLocalStorage from '../../hooks/useLocalStorage';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector  } from 'react-redux';\r\n// import { getFiltredContacts } from '../../../redux/phonebook/contacts-selectors';\r\n// import { addContact } from '../../../redux/phonebook/contacts-operations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nimport { ContactsSelectors, ContactsOperations } from '../../../redux/phonebook';\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(ContactsSelectors.getFiltredContacts);\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');  \r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(ContactsOperations.addContact(contacts, name, number));\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return(\r\n        <form className={styles.form} method=\"post\" onSubmit={handleSubmit}>\r\n            <label className={styles.label}>Name: \r\n            <input className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ]+(([' -][a-zA-Zа-яА-ЯІіЇїҐґ ])?[a-zA-Zа-яА-ЯІіЇїҐґ]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n            </label>\r\n            <label className={styles.label}>Number: \r\n                <input type=\"tel\" name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\" \r\n                className={styles.input} value={number} onChange={handleChange} required />\r\n            </label>\r\n            <div className={styles.label}>\r\n                <button type=\"submit\" className={styles.btn}>\r\n                    Add contact\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ContactsSelectors, ContactsActions } from '../../../redux/phonebook';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const filter = useSelector(ContactsSelectors.getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChangeFilter = event =>{\r\n        dispatch(ContactsActions.changeFilter(event.currentTarget.value))\r\n    };\r\n\r\n    return(\r\n    <form className={styles.form}>\r\n    <label className={styles.label}>\r\n        Find contacts by name\r\n        <input className={styles.input} \r\n        type=\"text\" \r\n        placeholder=\"Enter name\"  \r\n        name=\"filter\" \r\n        required onChange={onChangeFilter} \r\n        value={filter}/>\r\n    </label>\r\n    </form>\r\n)};\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { getFiltredContacts, getError, getLoadingStatus } from '../../../redux/phonebook/contacts-selectors';\r\n// import { fetchContact, deleteContact } from '../../../redux/phonebook/contacts-operations';\r\nimport styles from './ContactList.module.css';\r\nimport { useEffect } from 'react';\r\n\r\nimport { ContactsSelectors, ContactsOperations } from '../../../redux/phonebook';\r\n\r\nexport default function ContactList() { \r\n    const error = useSelector(ContactsSelectors.getError);\r\n    const loading = useSelector(ContactsSelectors.getLoadingStatus);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(ContactsOperations.fetchContact());\r\n    }, [dispatch]);\r\n    const contacts = useSelector(ContactsSelectors.getFiltredContacts);     \r\n\r\n    return(\r\n    <>\r\n    {loading && <h2 className={styles.loading}>Loading...</h2>}\r\n    {error && <h2 className={styles.error}>{error}</h2>}\r\n    <ul className={styles.list}>\r\n        {contacts.map( ({ id, name, number }) => (\r\n            <li key={id} className={styles.item}>\r\n                <p className={styles.name}>{name}: <span>{number}</span></p>\r\n                <button type=\"button\" className={styles.btn} onClick={() => dispatch(ContactsOperations.deleteContact(id))}>Delete</button>\r\n            </li>\r\n        ) )\r\n        }\r\n    </ul>\r\n    </>\r\n)};\r\nContactList.propTypes = {\r\n    id: PropTypes.any,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\n\r\n","import { useSelector } from 'react-redux';\r\nimport ContactForm from '../Components/Contacts/ContactForm';\r\nimport Filter from '../Components/Contacts/Filter';\r\nimport ContactList from '../Components/Contacts/ContactList';\r\nimport { ContactsSelectors } from '../redux/phonebook';\r\nimport styles from './ContactsView.module.css';\r\n\r\nfunction ContactsView() {\r\n    const totalContacts = useSelector(ContactsSelectors.getTotalContacts);\r\n  return (\r\n    <div className={styles.contacts}>\r\n      <h2>Expand your contacts </h2>\r\n      <ContactForm />\r\n      <h2>Your contacts (total: {totalContacts}) </h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsView;"],"sourceRoot":""}